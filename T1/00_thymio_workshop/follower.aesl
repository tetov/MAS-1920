<!DOCTYPE aesl-source>
<network>


<!--list of global events-->


<!--list of constants-->
<constant value="0" name="STATE_BLACK"/>
<constant value="1" name="STATE_WHITE"/>
<constant value="-1" name="DIR_LEFT"/>
<constant value="-2" name="DIR_L_LEFT"/>
<constant value="1" name="DIR_L_RIGHT"/>
<constant value="10" name="DIR_LOST"/>
<constant value="0" name="DIR_FRONT"/>
<constant value="300" name="SPEED_LINE"/>
<constant value="1" name="DIR_RIGHT"/>
<constant value="3000" name="OBSTACLE"/>
<constant value="2" name="DIR_BACK"/>


<!--show keywords state-->
<keywords flag="true"/>


<!--node thymio-II-->
<node nodeId="64305" name="thymio-II"># variables for state
var state[4] = [0,0,0,0]
var new_state[4] = [0,0,0,0]

var black_level = 650
var white_level = 720

var led_pulse
var temp

var s[2]
var dir
var speed = SPEED_LINE
var obst_left
var obst_right

onevent buttons
	when  button.center==1 do
		if speed==0 then
			speed=SPEED_LINE
		else
			speed=0
		end
	end

	if button.backward==1 and button.forward==1 then
		black_level = (prox.ground.delta[0] + prox.ground.delta[1]) / 2
		black_level = black_level+150
	end

	if button.left==1 and button.right==1 then
		white_level = (prox.ground.delta[0] + prox.ground.delta[1]) / 2
		if (white_level &lt; 150) then
			white_level = 200
		end
		white_level = white_level-150
	end


onevent timer0
	#Body color pulse
	led_pulse = led_pulse + 1
	if led_pulse > 0 then
		call leds.top(0, led_pulse, led_pulse)
		if led_pulse > 40 then
			led_pulse = -64
		end
	else
	temp=-led_pulse/2
	call leds.top(0, temp, temp)
	end


onevent prox
	#Line Follower
	if prox.ground.delta[0] &lt; black_level then
		s[0] = STATE_BLACK
	end
	if prox.ground.delta[0] > white_level  then
		s[0] = STATE_WHITE
	end

	if prox.ground.delta[1] &lt; black_level then
		s[1] = STATE_BLACK
	end
	if prox.ground.delta[1] > white_level then
		s[1] = STATE_WHITE
	end
	

	if prox.horizontal[0] > OBSTACLE or prox.horizontal[1] > OBSTACLE then
		dir = DIR_RIGHT
	elseif prox.horizontal[3] > OBSTACLE or prox.horizontal[4] > OBSTACLE then
		dir = DIR_LEFT
	elseif s[0] == STATE_BLACK and s[1] == STATE_BLACK then
		# Black line right under us
		dir = DIR_FRONT
	elseif s[0] == STATE_WHITE and s[1] == STATE_BLACK then
		dir = DIR_RIGHT
	elseif s[1] == STATE_WHITE and s[0] == STATE_BLACK then
		dir = DIR_LEFT
	else
		# Lost
		if dir > 0 then
			dir = DIR_L_RIGHT
		elseif dir &lt; 0 then
			dir = DIR_L_LEFT
		else
			dir = DIR_LOST
		end
	end

	if dir == DIR_FRONT then
		motor.left.target = speed
		motor.right.target = speed
		call leds.circle(32,0,0,0,32,0,0,0)
	elseif dir == DIR_RIGHT then
		motor.left.target = speed
		motor.right.target = 0
		call leds.circle(0,32,0,32,0,0,0,0)
	elseif dir == DIR_LEFT then
		motor.left.target = 0
		motor.right.target = speed
		call leds.circle(0,0,0,0,0,32,0,32)
	elseif dir == DIR_L_LEFT then
		motor.left.target = -speed
		motor.right.target = speed
		call leds.circle(0,0,0,0,0,0,32,0)
	elseif dir == DIR_L_RIGHT then
		motor.left.target = speed
		motor.right.target = -speed
		call leds.circle(0,0,32,0,0,0,0,0)
	elseif dir == DIR_LOST then
		motor.left.target = speed
		motor.right.target = -speed
		
	elseif prox.horizontal[0] > OBSTACLE or prox.horizontal[1] > OBSTACLE then
		motor.left.target = 500
		motor.right.target = 0
		call leds.bottom.left(32,0,0)
		call leds.bottom.right(32,0,0)
	elseif prox.horizontal[2] > OBSTACLE or prox.horizontal[3] > OBSTACLE then
		motor.left.target = 0
		motor.right.target = 500
		call leds.bottom.left(0,32,0)
		call leds.bottom.right(0,32,0)
	
end</node>


<!--node thymio-II-->
<node nodeId="45355" name="thymio-II">var black_level = 650
var white_level = 720

var led_pulse
var temp

var s[2]
var dir
var speed = SPEED_LINE
var obst = 0

onevent buttons
	when  button.center==1 do
		if speed==0 then
			speed=SPEED_LINE
		else
			speed=0
		end
	end

onevent timer0
	#Body color pulse
	led_pulse = led_pulse + 1
	if led_pulse > 0 and obst != 1 then
		call leds.top(0, led_pulse, led_pulse)
		if led_pulse > 40 then
			led_pulse = -64
		end
	else
	temp=-led_pulse/2
	call leds.top(0, temp, temp)
	end


onevent prox
	#Line Follower
	if prox.ground.delta[0] &lt; black_level then
		s[0] = STATE_BLACK
	end
	if prox.ground.delta[0] > white_level  then
		s[0] = STATE_WHITE
	end

	if prox.ground.delta[1] &lt; black_level then
		s[1] = STATE_BLACK
	end
	if prox.ground.delta[1] > white_level then
		s[1] = STATE_WHITE
	end
	

	if prox.horizontal[0] > OBSTACLE or prox.horizontal[1] > OBSTACLE then
		dir = DIR_RIGHT
		obst = 1
	elseif prox.horizontal[3] > OBSTACLE or prox.horizontal[4] > OBSTACLE then
		dir = DIR_LEFT
		obst = 1
	elseif  prox.horizontal[2] > OBSTACLE then
		dir = DIR_BACK
	elseif s[0] == STATE_BLACK and s[1] == STATE_BLACK then
		# Black line right under us
		dir = DIR_FRONT
	elseif s[0] == STATE_WHITE and s[1] == STATE_BLACK then
		dir = DIR_RIGHT
	elseif s[1] == STATE_WHITE and s[0] == STATE_BLACK then
		dir = DIR_LEFT
	else
		# Lost
		if dir > 0 then
			dir = DIR_L_RIGHT
		elseif dir &lt; 0 then
			dir = DIR_L_LEFT
		else
			dir = DIR_LOST
		end
	end
	
	if  dir == DIR_BACK then
		motor.left.target = -speed
		motor.right.target = -speed
		call leds.circle(0,0,0,32,0,32,0,0)
	elseif dir == DIR_FRONT and obst != 1 then
		motor.left.target = speed
		motor.right.target = speed
		call leds.circle(32,0,0,0,32,0,0,0)
	elseif dir == DIR_RIGHT then
		motor.left.target = speed
		motor.right.target = 0
		call leds.circle(0,32,0,32,0,0,0,0)
		obst = 0
	elseif dir == DIR_LEFT then
		motor.left.target = 0
		motor.right.target = speed
		call leds.circle(0,0,0,0,0,32,0,32)
		obst = 0
	elseif dir == DIR_L_LEFT then
		motor.left.target = -speed
		motor.right.target = speed
		call leds.circle(0,0,0,0,0,0,32,0)
	elseif dir == DIR_L_RIGHT then
		motor.left.target = speed
		motor.right.target = -speed
		call leds.circle(0,0,32,0,0,0,0,0)
	elseif dir == DIR_LOST then
		motor.left.target = speed
		motor.right.target = -speed
		
	elseif prox.horizontal[0] > OBSTACLE or prox.horizontal[1] > OBSTACLE then
		motor.left.target = 500
		motor.right.target = 0
		call leds.bottom.left(32,0,0)
		call leds.bottom.right(32,0,0)
	elseif prox.horizontal[2] > OBSTACLE or prox.horizontal[3] > OBSTACLE then
		motor.left.target = 0
		motor.right.target = 500
		call leds.bottom.left(0,32,0)
		call leds.bottom.right(0,32,0)
	
end
		</node>


</network>
